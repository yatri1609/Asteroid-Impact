str(data_orbits)
head(data_orbits)
average_impact <- data_impacts %>%
group_by(Period.Start) %>%
summarise(Average_Cumulative_Impact_Probability = mean(Cumulative.Impact.Probability, na.rm = TRUE))
ggplot(average_impact, aes(x = Period.Start, y = Average_Cumulative_Impact_Probability)) +
geom_line() +  # Use geom_line() for a line plot
geom_point() +  # Add points to the line plot
theme_minimal() +  # Optional: Use a minimal theme for aesthetics
labs(title = "Average Cumulative Impact Probability by Period Start",
x = "Period Start",
y = "Average Cumulative Impact Probability")
data_impacts_long <- data_impacts %>%
pivot_longer(cols = -Object.Name, names_to = "Metric", values_to = "Value")
View(data_impacts_long)
ggplot(data_impacts_long, aes(x = reorder(Object.Name, Value), y = Value, fill = Metric)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("Cumulative_Impact_Probability" = "green", "Asteroid_Velocity" = "blue",
"Asteroid_Magnitude" = "cyan", "Possible_Impacts" = "yellow")) +
labs(title = "Percentage of Asteroid Names", x = "Asteroids", y = "Percentage of Asteroids") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
guides(fill=guide_legend(title="Metric", title.position = "top", title.hjust = 0.5))
plot_ly(data_impacts_long, x = ~Value, y = ~reorder(Object.Name, Value), color = ~Metric, type = 'bar', orientation = 'h') %>%
layout(yaxis = list(title = 'Asteroids'),
xaxis = list(title = 'Percentage of Asteroids'),
barmode = 'stack',
title = 'Percentage of Asteroid Names',
legend = list(title = list(text = 'Metric')))
library(plotly)
plot_ly(data_impacts_long, x = ~Value, y = ~reorder(Object.Name, Value), color = ~Metric, type = 'bar', orientation = 'h') %>%
layout(yaxis = list(title = 'Asteroids'),
xaxis = list(title = 'Percentage of Asteroids'),
barmode = 'stack',
title = 'Percentage of Asteroid Names',
legend = list(title = list(text = 'Metric')))
View(data_impacts_long)
data_impacts_long <- data_impacts %>%
select(Object.Name,Asteroid.Diameter..km.,Asteroid.Magnitude,Asteroid.Velocity) %>%
pivot_longer(cols = -Object.Name, names_to = "Metric", values_to = "Value")
plot_ly(data_impacts_long, x = ~Value, y = ~reorder(Object.Name, Value), color = ~Metric, type = 'bar', orientation = 'h') %>%
layout(yaxis = list(title = 'Asteroids'),
xaxis = list(title = 'Percentage of Asteroids'),
barmode = 'stack',
title = 'Percentage of Asteroid Names',
legend = list(title = list(text = 'Metric')))
data_impacts_long <- data_impacts %>%
select(Object.Name,Asteroid.Diameter..km.*1000,Asteroid.Magnitude,Asteroid.Velocity) %>%
pivot_longer(cols = -Object.Name, names_to = "Metric", values_to = "Value")
data_impacts_long <- data_impacts %>%
mutate(Asteroid.Diameter..m = Asteroid.Diameter..km.*1000) %>%
select(Object.Name,Asteroid.Diameter..km.,Asteroid.Magnitude,Asteroid.Velocity) %>%
pivot_longer(cols = -Object.Name, names_to = "Metric", values_to = "Value")
plot_ly(data_impacts_long, x = ~Value, y = ~reorder(Object.Name, Value), color = ~Metric, type = 'bar', orientation = 'h') %>%
layout(yaxis = list(title = 'Asteroids'),
xaxis = list(title = 'Percentage of Asteroids'),
barmode = 'stack',
title = 'Percentage of Asteroid Names',
legend = list(title = list(text = 'Metric')))
data_impacts_long <- data_impacts %>%
mutate(Asteroid.Diameter..m = Asteroid.Diameter..km.*1000) %>%
select(Object.Name,Asteroid.Diameter..m,Asteroid.Magnitude,Asteroid.Velocity) %>%
pivot_longer(cols = -Object.Name, names_to = "Metric", values_to = "Value")
plot_ly(data_impacts_long, x = ~Value, y = ~reorder(Object.Name, Value), color = ~Metric, type = 'bar', orientation = 'h') %>%
layout(yaxis = list(title = 'Asteroids'),
xaxis = list(title = 'Percentage of Asteroids'),
barmode = 'stack',
title = 'Percentage of Asteroid Names',
legend = list(title = list(text = 'Metric')))
data_impacts_long <- data_impacts %>%
mutate(Asteroid.Diameter..m = Asteroid.Diameter..km.*100) %>%
select(Object.Name,Asteroid.Diameter..m,Asteroid.Magnitude,Asteroid.Velocity) %>%
pivot_longer(cols = -Object.Name, names_to = "Metric", values_to = "Value")
plot_ly(data_impacts_long, x = ~Value, y = ~reorder(Object.Name, Value), color = ~Metric, type = 'bar', orientation = 'h') %>%
layout(yaxis = list(title = 'Asteroids'),
xaxis = list(title = 'Percentage of Asteroids'),
barmode = 'stack',
title = 'Percentage of Asteroid Names',
legend = list(title = list(text = 'Metric')))
data_impacts_long <- data_impacts %>%
mutate("Asteroid.Diameter..km.*100" = Asteroid.Diameter..km.*100) %>%
select(Object.Name,"Asteroid.Diameter..km.*100",Asteroid.Magnitude,Asteroid.Velocity) %>%
pivot_longer(cols = -Object.Name, names_to = "Metric", values_to = "Value")
plot_ly(data_impacts_long, x = ~Value, y = ~reorder(Object.Name, Value), color = ~Metric, type = 'bar', orientation = 'h') %>%
layout(yaxis = list(title = 'Asteroids'),
xaxis = list(title = 'Percentage of Asteroids'),
barmode = 'stack',
title = 'Percentage of Asteroid Names',
legend = list(title = list(text = 'Metric')))
View(data_impacts)
head(data_impacts)
asteroid_counts <- data_impacts %>%
group_by(Period.End) %>%
summarise(count = n())
# Plot the stacked bar chart
ggplot(asteroid_counts, aes(x = Period.End, y = count, fill = Period.End)) +
geom_col() +
labs(title = "Asteroid Impact Risk by Year",
x = "Year",
y = "Count of Asteroids") +
scale_fill_continuous(name = "Year") +
theme_minimal()
View(data_orbits)
#import libraries
library(tidyr)
library(dplyr)
library(ggplot2)
library(corrplot)
processAsteroid <- function(impact_data_file, orbit_data_file){
#read data from csv
impact_data <- read.csv(impact_data_file, header=TRUE)
orbit_data <- read.csv(orbit_data_file, header=TRUE)
#column names of the dataset
colnames(impact_data)
colnames(orbit_data)
#Data transformations
#data structure
str(impact_data)
str(orbit_data)
#convert Maximum Torino Scale to numeric
unique(impact_data$Maximum.Torino.Scale)
#convert chr to numeric value
impact_data$Maximum.Torino.Scale <- as.numeric(impact_data$Maximum.Torino.Scale)
#add period field based on period start and end
impact_data$Period <- impact_data$Period.End - impact_data$Period.Start
#since there are two values of Torino scale 0 and (*),
#I will convert (*) to NA since (*) is also a notation used to denote Torino Scale
impact_data$Maximum.Torino.Scale[impact_data$Maximum.Torino.Scale == "(*)" | is.na(impact_data$Maximum.Torino.Scale)] <- NA
#convert chr to numeric value for Asteroid Magnitude
orbit_data$Asteroid.Magnitude <- as.numeric(orbit_data$Asteroid.Magnitude)
#missing values
paste("Number of null valies in impact data:", (sum(is.na(impact_data)))*100/nrow(impact_data),"%")
paste("Number of null valies in orbit data:", (sum(is.na(orbit_data)))*100/nrow(orbit_data),"%")
write.csv(impact_data, "./Data/processed_impacts.csv")
write.csv(orbit_data, "./Data/processed_orbits.csv")
}
processAsteroid("./Data/impacts.csv","./Data/orbits.csv")
library(dplyr)
library(tidyr)
library(tidyverse)
library(ggplot2)
library(plotly)
#import processed files
data_impacts <- read.csv("./Data/processed_impacts.csv", header=TRUE)
data_orbits <- read.csv("./Data/processed_orbits.csv", header=TRUE)
str(data_impacts)
head(data_impacts)
str(data_orbits)
head(data_orbits)
# average_impact <- data_impacts %>%
#   group_by(Period.Start) %>%
#   summarise(Average_Cumulative_Impact_Probability = mean(Cumulative.Impact.Probability, na.rm = TRUE))
#
# ggplot(average_impact, aes(x = Period.Start, y = Average_Cumulative_Impact_Probability)) +
#   geom_line() +  # Use geom_line() for a line plot
#   geom_point() +  # Add points to the line plot
#   theme_minimal() +  # Optional: Use a minimal theme for aesthetics
#   labs(title = "Average Cumulative Impact Probability by Period Start",
#        x = "Period Start",
#        y = "Average Cumulative Impact Probability")
data_impacts_long <- data_impacts %>%
mutate("Asteroid.Diameter..km.*100" = Asteroid.Diameter..km.*100) %>%
select(Object.Name,"Asteroid.Diameter..km.*100",Asteroid.Magnitude,Asteroid.Velocity) %>%
pivot_longer(cols = -Object.Name, names_to = "Metric", values_to = "Value")
plot_ly(data_impacts_long, x = ~Value, y = ~reorder(Object.Name, Value), color = ~Metric, type = 'bar', orientation = 'h') %>%
layout(yaxis = list(title = 'Asteroids'),
xaxis = list(title = 'Percentage of Asteroids'),
barmode = 'stack',
title = 'Percentage of Asteroid Names',
legend = list(title = list(text = 'Metric')))
asteroid_counts <- data_impacts %>%
group_by(Period.End) %>%
summarise(count = n())
# Plot the stacked bar chart
ggplot(asteroid_counts, aes(x = Period.End, y = count, fill = Period.End)) +
geom_col() +
labs(title = "Asteroid Impact Risk by Year",
x = "Year",
y = "Count of Asteroids") +
scale_fill_continuous(name = "Year") +
theme_minimal()
average_impact <- data_impacts %>%
group_by(Period.Start) %>%
summarise(Average_Cumulative_Impact_Probability = mean(Cumulative.Impact.Probability, na.rm = TRUE))
ggplot(average_impact, aes(x = Period.Start, y = Average_Cumulative_Impact_Probability)) +
geom_line() +  # Use geom_line() for a line plot
geom_point() +  # Add points to the line plot
theme_minimal() +  # Optional: Use a minimal theme for aesthetics
labs(title = "Average Cumulative Impact Probability by Period Start",
x = "Period Start",
y = "Average Cumulative Impact Probability")
plot_ly(average_impact, x = Period.Start, y = Average_Cumulative_Impact_Probability, color = blues9, type='line') %>%
layout(title = "Average Cumulative Impact Probability by Period Start",
xaxis = "Period Start",
yaxis = "Average Cumulative Impact Probability")
average_impact
plot_ly(average_impact, x = ~Period.Start, y = ~Average_Cumulative_Impact_Probability, color = blues9, type='line') %>%
layout(title = "Average Cumulative Impact Probability by Period Start",
xaxis = "Period Start",
yaxis = "Average Cumulative Impact Probability")
plot_ly(average_impact, x = ~Period.Start, y = ~Average_Cumulative_Impact_Probability, color = blues9) %>%
layout(title = "Average Cumulative Impact Probability by Period Start",
xaxis = "Period Start",
yaxis = "Average Cumulative Impact Probability")
asteroid_counts <- data_impacts %>%
group_by(Period.End) %>%
summarise(count = n())
# Plot the stacked bar chart
plot_ly(asteroid_counts, x = ~Period.End, y = ~count, type = 'bar', color = ~Period.End,
colors = 'Viridis') %>%
layout(title = 'Asteroid Impact Risk by Year',
xaxis = list(title = 'Year'),
yaxis = list(title = 'Count of Asteroids'),
colorway = RColorBrewer::brewer.pal(8, "Set2"))
plot_ly(asteroid_counts, x = ~Period.End, y = ~count, type = 'bar', color = ~Period.End,
colors = blues9) %>%
layout(title = 'Asteroid Impact Risk by Year',
xaxis = list(title = 'Year'),
yaxis = list(title = 'Count of Asteroids'),
colorway = RColorBrewer::brewer.pal(8, "Set2"))
plot_ly(asteroid_counts, x = ~Period.End, y = ~count, type = 'bar', color = ~count,
colors = blues9) %>%
layout(title = 'Asteroid Impact Risk by Year',
xaxis = list(title = 'Year'),
yaxis = list(title = 'Count of Asteroids'),
colorway = RColorBrewer::brewer.pal(8, "Set2"))
plot_ly(asteroid_counts, x = ~Period.End, y = ~count, type = 'bar',
colors = blues9) %>%
layout(title = 'Asteroid Impact Risk by Year',
xaxis = list(title = 'Year'),
yaxis = list(title = 'Count of Asteroids'),
colorway = RColorBrewer::brewer.pal(8, "Set2"))
plot_ly(average_impact, x = ~Period.Start, y = ~Average_Cumulative_Impact_Probability, type = 'scatter', mode = 'lines', color = blues9) %>%
layout(title = "Average Cumulative Impact Probability by Period Start",
xaxis = "Period Start",
yaxis = "Average Cumulative Impact Probability")
##### Average Cumulative Impact Probability by Period Start #####
average_impact <- data_impacts %>%
group_by(Period.Start) %>%
summarise(Average_Cumulative_Impact_Probability = mean(Cumulative.Impact.Probability, na.rm = TRUE))
plot_ly(average_impact, x = ~Period.Start, y = ~Average_Cumulative_Impact_Probability, type = 'scatter', mode = 'lines', color = blues9) %>%
layout(title = "Average Cumulative Impact Probability by Period Start",
xaxis = "Period Start",
yaxis = "Average Cumulative Impact Probability")
average_impact <- data_impacts %>%
group_by(Period.Start) %>%
summarise(Average_Cumulative_Impact_Probability = mean(Cumulative.Impact.Probability, na.rm = TRUE))
plot_ly(average_impact, x = ~Period.Start, y = ~Average_Cumulative_Impact_Probability,
type = 'scatter', mode = 'lines') %>%
layout(title = "Average Cumulative Impact Probability by Period Start",
xaxis = list(title = "Period Start"),
yaxis = list(title = "Average Cumulative Impact Probability"))
plot_ly(average_impact, x = ~Period.Start, y = ~Average_Cumulative_Impact_Probability,
type = 'scatter', mode = 'lines+markers') %>%
layout(title = "Average Cumulative Impact Probability by Period Start",
xaxis = list(title = "Period Start"),
yaxis = list(title = "Average Cumulative Impact Probability"))
##### Asteroid features by object name #####
data_impacts_long <- data_impacts %>%
mutate("Asteroid.Diameter..km.*100" = Asteroid.Diameter..km.*100) %>%
select(Object.Name,"Asteroid.Diameter..km.*100",Asteroid.Magnitude,Asteroid.Velocity) %>%
pivot_longer(cols = -Object.Name, names_to = "Metric", values_to = "Value")
plot_ly(data_impacts_long, x = ~Value, y = ~reorder(Object.Name, Value),
color = ~Metric,type = 'scatter', mode = 'lines+markers', orientation = 'h') %>%
layout(yaxis = list(title = 'Asteroids'),
xaxis = list(title = 'Percentage of Asteroids'),
barmode = 'stack',
title = 'Percentage of Asteroid Names',
legend = list(title = list(text = 'Metric')))
plot_ly(data_impacts_long, x = ~Value, y = ~reorder(Object.Name, Value),
color = ~Metric, type = 'bar', orientation = 'h') %>%
layout(yaxis = list(title = 'Asteroids'),
xaxis = list(title = 'Percentage of Asteroids'),
barmode = 'stack',
title = 'Percentage of Asteroid Names',
legend = list(title = list(text = 'Metric')))
library(corrplot)
data_impacts
corr(select(data_impacts, -Object.Name))
cor(select(data_impacts, -Object.Name))
View(data_impacts)
plot_ly(data_impacts, x=~Asteroid.Velocity, y=~Possible.Impacts,
type='scatter', mode='markers') %>%
layout(title = "Possible Impacts by Asteroid Velocity",
xaxis = list(title = "Asteroid Velocity in km/s"),
yaxis = list(title = "Possible Impacts"))
plot_ly(data_impacts, x=~Asteroid.Magnitude, y=~Possible.Impacts,
type='scatter', mode='markers') %>%
layout(title = "Possible Impacts by Asteroid Magnitude",
xaxis = list(title = "Asteroid Magnitude"),
yaxis = list(title = "Possible Impacts"))
plot_ly(data_impacts, x=~Asteroid.Diameter..km., y=~Possible.Impacts,
type='scatter', mode='markers') %>%
layout(title = "Possible Impacts by Asteroid Diameter",
xaxis = list(title = "Asteroid Diameter in km"),
yaxis = list(title = "Possible Impacts"))
View(data_orbits)
View(data_orbits)
View(data_orbits)
asteroid_category_count <- data_orbits %>%
group_by(Object.Classification) %>%
summarise(count = n())
View(asteroid_category_count)
asteroid_category_count <- data_orbits %>%
group_by(Object.Classification) %>%
summarise(count = n())
plot_ly(data_orbits, x=~Object.Classification, y=~count, type='bar') %>%
layout(title = "Asteroids per Classification",
xaxis = list(title = "Asteroid Classification"),
yaxis = list(title = "Number of Asteroids"))
plot_ly(asteroid_category_count, x=~Object.Classification, y=~count, type='bar') %>%
layout(title = "Asteroids per Classification",
xaxis = list(title = "Asteroid Classification"),
yaxis = list(title = "Number of Asteroids"))
library(dplyr)
library(tidyr)
library(tidyverse)
library(ggplot2)
library(plotly)
library(corrplot)
#import processed files
data_impacts <- read.csv("./Data/processed_impacts.csv", header=TRUE)
data_orbits <- read.csv("./Data/processed_orbits.csv", header=TRUE)
str(data_impacts)
head(data_impacts)
str(data_orbits)
head(data_orbits)
##### Asteroid features by object name #####
data_impacts_long <- data_impacts %>%
mutate("Asteroid.Diameter..km.*100" = Asteroid.Diameter..km.*100) %>%
select(Object.Name,"Asteroid.Diameter..km.*100",Asteroid.Magnitude,Asteroid.Velocity) %>%
pivot_longer(cols = -Object.Name, names_to = "Metric", values_to = "Value")
plot_ly(data_impacts_long, x = ~Value, y = ~reorder(Object.Name, Value),
color = ~Metric, type = 'bar', orientation = 'h') %>%
layout(yaxis = list(title = 'Asteroids'),
xaxis = list(title = 'Percentage of Asteroids'),
barmode = 'stack',
title = 'Percentage of Asteroid Names',
legend = list(title = list(text = 'Metric')))
##### Asteroid Impact Risk by Year #####
asteroid_counts <- data_impacts %>%
group_by(Period.End) %>%
summarise(count = n())
# Plot the stacked bar chart
plot_ly(asteroid_counts, x = ~Period.End, y = ~count, type = 'bar',
colors = blues9) %>%
layout(title = 'Asteroid Impact Risk by Year',
xaxis = list(title = 'Year'),
yaxis = list(title = 'Count of Asteroids'),
colorway = RColorBrewer::brewer.pal(8, "Set2"))
##### Average Cumulative Impact Probability by Period Start #####
average_impact <- data_impacts %>%
group_by(Period.Start) %>%
summarise(Average_Cumulative_Impact_Probability = mean(Cumulative.Impact.Probability, na.rm = TRUE))
plot_ly(average_impact, x = ~Period.Start, y = ~Average_Cumulative_Impact_Probability,
type = 'scatter', mode = 'lines+markers') %>%
layout(title = "Average Cumulative Impact Probability by Period Start",
xaxis = list(title = "Period Start"),
yaxis = list(title = "Average Cumulative Impact Probability"))
##### Possible Impacts vs Asteroid features #####
plot_ly(data_impacts, x=~Asteroid.Velocity, y=~Possible.Impacts,
type='scatter', mode='markers') %>%
layout(title = "Possible Impacts by Asteroid Velocity",
xaxis = list(title = "Asteroid Velocity in km/s"),
yaxis = list(title = "Possible Impacts"))
plot_ly(data_impacts, x=~Asteroid.Magnitude, y=~Possible.Impacts,
type='scatter', mode='markers') %>%
layout(title = "Possible Impacts by Asteroid Magnitude",
xaxis = list(title = "Asteroid Magnitude"),
yaxis = list(title = "Possible Impacts"))
plot_ly(data_impacts, x=~Asteroid.Diameter..km., y=~Possible.Impacts,
type='scatter', mode='markers') %>%
layout(title = "Possible Impacts by Asteroid Diameter",
xaxis = list(title = "Asteroid Diameter in km"),
yaxis = list(title = "Possible Impacts"))
##### Orbit data classification
asteroid_category_count <- data_orbits %>%
group_by(Object.Classification) %>%
summarise(count = n())
plot_ly(asteroid_category_count, x=~Object.Classification, y=~count, type='bar') %>%
layout(title = "Asteroids per Classification",
xaxis = list(title = "Asteroid Classification"),
yaxis = list(title = "Number of Asteroids"))
plot_ly(data_impacts, x=~Asteroid.Velocity, y=~Possible.Impacts,
type='scatter', mode='markers') %>%
add_trace(data_impacts, x=~Asteroid.Magnitude, y=~Possible.Impacts,
type='scatter', mode='markers') %>%
layout(title = "Possible Impacts by Asteroid Velocity",
xaxis = list(title = "Asteroid Velocity in km/s"),
yaxis = list(title = "Possible Impacts"))
##### Possible Impacts vs Asteroid features #####
plot_ly(data_impacts, x=~Asteroid.Velocity, y=~Possible.Impacts,
type='scatter', mode='markers') %>%
add_trace(data_impacts, x=~Asteroid.Magnitude, y=~Possible.Impacts,
type='scatter', mode='markers') %>%
add_trace(data_impacts, x=~Asteroid.Diameter..km., y=~Possible.Impacts,
type='scatter', mode='markers') %>%
layout(title = "Possible Impacts by Asteroid Velocity",
xaxis = list(title = "Asteroid Velocity in km/s"),
yaxis = list(title = "Possible Impacts"))
library(dplyr)
library(tidyr)
library(tidyverse)
library(ggplot2)
library(plotly)
library(corrplot)
#import processed files
data_impacts <- read.csv("./Data/processed_impacts.csv", header=TRUE)
data_orbits <- read.csv("./Data/processed_orbits.csv", header=TRUE)
str(data_impacts)
head(data_impacts)
str(data_orbits)
head(data_orbits)
##### Asteroid features by object name #####
data_impacts_long <- data_impacts %>%
mutate("Asteroid.Diameter..km.*100" = Asteroid.Diameter..km.*100) %>%
select(Object.Name,"Asteroid.Diameter..km.*100",Asteroid.Magnitude,Asteroid.Velocity) %>%
pivot_longer(cols = -Object.Name, names_to = "Metric", values_to = "Value")
fig <- plot_ly(data_impacts_long, x = ~Value, y = ~reorder(Object.Name, Value),
color = ~Metric, type = 'bar', orientation = 'h') %>%
layout(yaxis = list(title = 'Asteroids'),
xaxis = list(title = 'Metrics'),
barmode = 'stack',
title = 'Asteroid features by Object',
legend = list(title = list(text = 'Metric')))
plotly_IMAGE(fig, format = "png", out_file = "./Visualization/AsteroidFeaturesbyObject.png")
fig <- plot_ly(data_impacts_long, x = ~Value, y = ~reorder(Object.Name, Value),
color = ~Metric, type = 'bar', orientation = 'h') %>%
layout(yaxis = list(title = 'Asteroids'),
xaxis = list(title = 'Metrics'),
barmode = 'stack',
title = 'Asteroid features by Object',
legend = list(title = list(text = 'Metric')))
fig
orca(fig,"./Visualization/AsteroidFeaturesbyObject.png")
export(fig, file = "./Visualization/AsteroidFeaturesByObject.png")
library(webshot)
export(fig, file = "./Visualization/AsteroidFeaturesByObject.png")
webshot::install_phantomjs()
orca(fig, file = "./Visualization/AsteroidFeaturesByObject.png")
kaleido(fig, file = "./Visualization/AsteroidFeaturesByObject.png")
library(dplyr)
library(tidyr)
library(tidyverse)
library(ggplot2)
library(plotly)
library(corrplot)
library(webshot)
#import processed files
data_impacts <- read.csv("./Data/processed_impacts.csv", header=TRUE)
data_orbits <- read.csv("./Data/processed_orbits.csv", header=TRUE)
str(data_impacts)
head(data_impacts)
str(data_orbits)
head(data_orbits)
##### Asteroid features by object name #####
data_impacts_long <- data_impacts %>%
mutate("Asteroid.Diameter..km.*100" = Asteroid.Diameter..km.*100) %>%
select(Object.Name,"Asteroid.Diameter..km.*100",Asteroid.Magnitude,Asteroid.Velocity) %>%
pivot_longer(cols = -Object.Name, names_to = "Metric", values_to = "Value")
AsteroidFeaturesByObject <- plot_ly(data_impacts_long, x = ~Value, y = ~reorder(Object.Name, Value),
color = ~Metric, type = 'bar', orientation = 'h') %>%
layout(yaxis = list(title = 'Asteroids'),
xaxis = list(title = 'Metrics'),
barmode = 'stack',
title = 'Asteroid features by Object',
legend = list(title = list(text = 'Metric')))
AsteroidFeaturesByObject
##### Asteroid Impact Risk by Year #####
asteroid_counts <- data_impacts %>%
group_by(Period.End) %>%
summarise(count = n())
# Plot the stacked bar chart
plot_ly(asteroid_counts, x = ~Period.End, y = ~count, type = 'bar',
colors = blues9) %>%
layout(title = 'Asteroid Impact Risk by Year',
xaxis = list(title = 'Year'),
yaxis = list(title = 'Count of Asteroids'),
colorway = RColorBrewer::brewer.pal(8, "Set2"))
##### Average Cumulative Impact Probability by Period Start #####
average_impact <- data_impacts %>%
group_by(Period.Start) %>%
summarise(Average_Cumulative_Impact_Probability = mean(Cumulative.Impact.Probability, na.rm = TRUE))
plot_ly(average_impact, x = ~Period.Start, y = ~Average_Cumulative_Impact_Probability,
type = 'scatter', mode = 'lines+markers') %>%
layout(title = "Average Cumulative Impact Probability by Year",
xaxis = list(title = "Year"),
yaxis = list(title = "Average Cumulative Impact Probability"))
##### Possible Impacts vs Asteroid features #####
plot_ly(data_impacts, x=~Asteroid.Velocity, y=~Possible.Impacts,
type='scatter', mode='markers') %>%
layout(title = "Possible Impacts by Asteroid Velocity",
xaxis = list(title = "Asteroid Velocity in km/s"),
yaxis = list(title = "Possible Impacts"))
plot_ly(data_impacts, x=~Asteroid.Magnitude, y=~Possible.Impacts,
type='scatter', mode='markers') %>%
layout(title = "Possible Impacts by Asteroid Magnitude",
xaxis = list(title = "Asteroid Magnitude"),
yaxis = list(title = "Possible Impacts"))
plot_ly(data_impacts, x=~Asteroid.Diameter..km., y=~Possible.Impacts,
type='scatter', mode='markers') %>%
layout(title = "Possible Impacts by Asteroid Diameter",
xaxis = list(title = "Asteroid Diameter in km"),
yaxis = list(title = "Possible Impacts"))
##### Orbit data classification
asteroid_category_count <- data_orbits %>%
group_by(Object.Classification) %>%
summarise(count = n())
plot_ly(asteroid_category_count, x=~Object.Classification, y=~count, type='bar') %>%
layout(title = "Asteroids per Classification",
xaxis = list(title = "Asteroid Classification"),
yaxis = list(title = "Number of Asteroids"))
